// Generated by LiveScript 1.3.1
(function(){
  var ldLoader;
  ldLoader = function(opt){
    var this$ = this;
    opt == null && (opt = {});
    ['root', 'container'].map(function(n){
      if (opt[n]) {
        return this$[n] = typeof opt[n] === 'string'
          ? document.querySelector(opt[n])
          : opt[n];
      }
    });
    if (!this.container) {
      this.container = this.root
        ? this.root.parentNode
        : document.body;
    }
    if (!this.root) {
      this.root = document.createElement("div");
      this.root.classList.add('default');
      this.container.appendChild(this.root);
    }
    this.root.classList.add('ldld');
    this.root.classList.remove('active');
    this.count = 0;
    return this;
  };
  ldLoader.prototype = import$(Object.create(Object.prototype), {
    on: function(delay){
      delay == null && (delay = 0);
      return this.toggle(true, delay);
    },
    off: function(delay){
      delay == null && (delay = 0);
      return this.toggle(false, delay);
    },
    toggle: function(v, delay){
      var d, this$ = this;
      delay == null && (delay = 0);
      if (delay) {
        return setTimeout(function(){
          return this$.toggle(v);
        }, delay);
      }
      d = !(v != null)
        ? this.root.classList.contains('active') ? -1 : 1
        : v
          ? 1
          : -1;
      this.count += d;
      if (this.count >= 2 || (this.count === 1 && d < 0)) {
        return;
      }
      return this.root.classList[!(v != null)
        ? 'toggle'
        : v ? 'add' : 'remove']('active');
    }
  });
  return window.ldLoader = ldLoader;
})();
function import$(obj, src){
  var own = {}.hasOwnProperty;
  for (var key in src) if (own.call(src, key)) obj[key] = src[key];
  return obj;
}
